import net.fabricmc.loom.task.RemapJarTask

buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
		classpath group: 'gradle.plugin.com.modrinth.minotaur', name: 'Minotaur', version: '1.2.1'
	}
}

plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.mc_version}"
group = project.maven_group

minecraft {
	accessWidener = file("src/main/resources/ultra_amplified_dimension.accesswidener")
}

repositories {
	maven {
		name = "Ladysnake Libs"
		url = "https://ladysnake.jfrog.io/artifactory/mods"
	}
	maven { url "https://api.modrinth.com/maven/" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://nexus.resourcefulbees.com/repository/maven-public/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi ("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_version}"
	modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_version}"
	modImplementation ("maven.modrinth:modmenu:${project.mod_menu_version}") { transitive = false }

	modRuntime "com.telepathicgrunt:Blame-Fabric:1.17-4.0.1-fabric"
}

apply from: 'gradle/processresources.gradle'

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

java {
	withSourcesJar()
}

jar {
	from "LICENSE"
}

apply from: 'gradle/maven.gradle'
apply from: 'gradle/curseforge.gradle'
apply from: 'gradle/modrinth.gradle'

task buildAndRelease{}
tasks.buildAndRelease.dependsOn(tasks.build, tasks.publish, tasks.curseforge, tasks.publishModrinth)