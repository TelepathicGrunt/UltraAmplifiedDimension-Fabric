import net.fabricmc.loom.task.RemapJarTask

buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
		classpath group: 'gradle.plugin.com.modrinth.minotaur', name: 'Minotaur', version: '1.1.0'
	}
}

plugins {
	id 'fabric-loom' version '0.7-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
	accessWidener = file("src/main/resources/ultra_amplified_dimension.accesswidener")
}

repositories {
	maven { url 'https://jitpack.io' }
	maven {
		name = "Ladysnake Libs"
		url = 'https://dl.bintray.com/ladysnake/libs'
	}
	maven { url 'https://maven.fabricmc.net/io/github/prospector/modmenu/' }
	maven { url "https://maven.shedaniel.me/" }
	maven {
		url "https://nexus.resourcefulbees.com/repository/maven-public/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_version}"
	modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_version}"
	modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"

	modImplementation 'com.github.modmuss50:Voyager:1.0.0'
	include 'com.github.modmuss50:Voyager:1.0.0'

	modImplementation "com.telepathicgrunt:Blame-Fabric:1.16.5-3.2.0-fabric"
}

apply from: 'gradle/processresources.gradle'

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

apply from: 'gradle/maven.gradle'
apply from: 'gradle/curseforge.gradle'
apply from: 'gradle/modrinth.gradle'